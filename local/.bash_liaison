
##
## exports
##

export PATH=$PATH:/usr/local/MM/bin:$HOME/perl5/bin

export DEFAULT_LEAF_PORT=8500
export EACCRED_DIR=$HOME
export LEAF_LIB_DIR=$HOME/leaf/lib
export CATALYST_CONFIG_LOCAL_SUFFIX=dev_$USER

export PERL_LOCAL_LIB_ROOT="/home/jmcguire/lib/perl5"
export PERL_MB_OPT="--install_base /home/jmcguire/lib/perl5"
export PERL_MM_OPT="INSTALL_BASE=/home/jmcguire/lib/perl5"
export PERL5LIB=/usr/local/M2/lib/perl5:$HOME/leaf/lib/:$HOME/lib/perl5/:$HOME/lib/perl5/lib/perl5/i686-linux:$HOME/lib/perl5/lib/perl5

##
## aliases
##

alias ptidy='perl -MPerl::Tidy -E'\''Perl::Tidy::perltidy(source=>$ARGV[1],perltidyrc=>"~/.perltidyrc")'\'''

## run this while in a template directory, no arguments are needed
alias template_structure="find . -path '*.svn*' -prune -o -type f -print0 | xargs -0 perl -nle'(\$inc) = /\\[\\%-? \\s* INCLUDE \\s+ .([\\w\\.\\/-]+). \\s*/x; next unless \$inc; \$all{\$ARGV}{\$inc} = 1; END{print qq{\\n\$_:\\n\\t} . join(qq{\\n\\t}, keys %{\$all{\$_}}) foreach keys %all}'"

## run this while in a template directory, no arguments are needed
alias find_css_in_templates="find . -path '*.svn*' -prune -o -type f -print0 | xargs -0 perl -nle'map {\$a=\$1; next if \$2 =~ /[\\[\\]\\%]/; print qq{\$ARGV\\t} . (lc \$a eq qq{id} ? qq{#\$_} : qq{.\$_})} split /\\s/, \$2 while(/(class|id)=\"([^\"]+)\"/g)'"

## kill rogue catalyst servers (after bash crashes)
alias kill_server='myps | grep _server.pl | grep -v grep | awk '\''{print $2}'\'' | xargs kill -9 '

##
## fns
##

## translate phases.conf into just phases and steps
function translate_phases() {
  cat phases.conf \
  | perl -ne'print if /<\b(step|phase|title|abbr)\b/' \
  | perl -pe's/^\s+//' \
  | perl -ne'print unless /^<\//' \
  | perl -pe's/<|>//g' \
  | perl -pe'$i=2; $i=0 if /^phase /; $i=1 if /^step /; print "\t" x $i'
}

## quickly navigating around leaf & application directories

## when deep in the directory of a client application, go to the
## equivalent directory in leaf.
function leaf() {
    ## find leaf|client core directory
    CLIENTDIR="$EACCRED_DIR/leaf"
    LIBSUBDIR='LEAF'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        ## if we're in a leaf|client directory, go to leaf home
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        ## if we're in someone else's application directory, change to the
        ## equivalent leaf|client dir
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        ## deal with "lib/LEAF" v. "lib/CLIENT_NAME"
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        ## the subdirectory might not exist, check that we went somewhere
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else ## otherwise just go to the leaf|client home
        cd $CLIENTDIR
    fi
}

## do the same thing to get back to a client application
## (can we automate the creation of these? can bash generate code?)
function coarc() {
    CLIENTDIR="$EACCRED_DIR/coarc"
    LIBSUBDIR='CoARC'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function phab() {
    CLIENTDIR="$EACCRED_DIR/phab"
    LIBSUBDIR='PHAB'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function cahiim() {
    CLIENTDIR="$EACCRED_DIR/cahiim"
    LIBSUBDIR='CAHIIM'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function asco() {
    CLIENTDIR="$EACCRED_DIR/asco"
    LIBSUBDIR='ASCO'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function acote() {
    CLIENTDIR="$EACCRED_DIR/acote"
    LIBSUBDIR='ACOTE'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function apa() {
    CLIENTDIR="$EACCRED_DIR/apa"
    LIBSUBDIR='APA'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function test() {
    CLIENTDIR="$EACCRED_DIR/test"
    LIBSUBDIR='TEST'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function cahme() {
    CLIENTDIR="$EACCRED_DIR/cahme"
    LIBSUBDIR='CAHME'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function appic() {
    CLIENTDIR="$EACCRED_DIR/appic"
    LIBSUBDIR='APPIC'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function adea() {
    CLIENTDIR="$EACCRED_DIR/adea"
    LIBSUBDIR='ADEA'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function acpe() {
    CLIENTDIR="$EACCRED_DIR/acpe"
    LIBSUBDIR='ACPE'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function temp() {
    CLIENTDIR="$EACCRED_DIR/temp"
    LIBSUBDIR='TEMP'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function caate() {
    CLIENTDIR="$EACCRED_DIR/caate"
    LIBSUBDIR='CAATE'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function newleaf() {
    CLIENTDIR="$EACCRED_DIR/newleaf"
    LIBSUBDIR='LEAF'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function protoclient() {
    CLIENTDIR="$EACCRED_DIR/protoclient/"
    LIBSUBDIR='ProtoClient'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function bootstrap_leaf() {
    CLIENTDIR="$EACCRED_DIR/bootstrap_leaf/"
    LIBSUBDIR='LEAF'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

function bootstrap_apa() {
    CLIENTDIR="$EACCRED_DIR/bootstrap_apa/"
    LIBSUBDIR='APA'
    if [ `pwd | grep "^$CLIENTDIR"` ] 
    then
        cd $CLIENTDIR
    elif [ `pwd | grep "^$EACCRED_DIR.*/\(t\|templates\|lib\|sql\|htdocs\)"` ]
    then
        SUBDIR=`pwd | sed 's_^.*/\(t\|templates\|lib\|sql\|htdocs\)_\1_'`
        SUBDIR=`echo $SUBDIR | sed "s_^lib/[^/]\+_lib/${LIBSUBDIR}_"`
        cd $CLIENTDIR/$SUBDIR >/dev/null 2>/dev/null
        if [ $? == 1 ]
        then
            cd $CLIENTDIR
        fi
    else
        cd $CLIENTDIR
    fi
}

