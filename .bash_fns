#!/bin/bash

## coding analysis
function lines_coded {
    perl -ne'print unless /^\s*$/ || /^\s*(?:#|\/\*|\*)/' $* | wl
}
function lines_commented {
    perl -ne'print if /^\s*(?:#|\/\*|\*)/' $* | wl
}

## get all SVN commits after a certain date by a certain user
## e.g. $ svn_date_user 2013-01-31 jmcguire
svn_date_user () {
    svn log -v -r{$1}:HEAD | sed -n "/$2/,/-----\$/ p"
}

## get breakpoints from a CSS file
## e.g. $ get_css_breakpoints time.css
get_css_breakpoints () {
    grep ^@media $1 \
    | perl -pe's/\@media screen and \(([^)]+)\) {/$1/' \
    | perl -pe's/^\@media(?: (?:only )?screen and )?//;
               s/,\s*/\n/g;
               s/only screen and//g;
               s/^\s+//mg;
               s/ {\s*$/\n/mg;' \
    | sort -u
}

## add a blank space to the Mac OSX Dock
add_spacer_to_dock () {
  defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
  killall Dock
}

## read markdown
readm () {
  pandoc $1 | lynx -stdin
}

## see the structure of a json file
## e.g. $ json_structure input.json
json_structure() {
    perl -ne'if(/^[\W_]+$/ or /"\w+" \s* : \s* [\[{]/x){ print }' $1
}

## see the module and function of perl code in a directory
## e.g. $ perl_structure
function perl_structure {
    find . -name "*_Test.pm" -prune -o -type f -print0 \
    | xargs -0 perl -nle'
        BEGIN{ $last_p = undef} 
        $last_p = undef if eof;
        ($p) = /^package (.+);/;
        $last_p = $p if $p;
        ($s) = /^sub (\w+)\b/;
        next unless $s;
        $all{$last_p}{$s}++;
        END{ for $p (keys %all) { print "\n$p"; print "\t$_" foreach keys %{$all{$p}} }}'
}

function tailgrep {
	tailf $1 | grep --line-buffered "$2"
}

function v {
	wl $1
	l $1
	head $1
}
